(
	{
		Identifier = "xcode.lang.eero.identifier";
		Syntax = {
			StartChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_";
			Chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";
			Words = (
				break                       ,			
				case                        ,			
				continue                    ,			
				default                     ,			
				do                          ,			
				else                        ,			
				for                         ,			
				goto                        ,			
				if                          ,			
				return                      ,			
				sizeof                      ,			
				switch                      ,			
				typedef                     ,			
				while                       ,			
				_Static_assert              ,			
				__func__                    ,			
				__objc_yes                  ,			
				__objc_no                   ,			
				private                     ,
				protected                   ,			
				public                      ,			
				throw                       ,			
				try                         ,			
				using                       ,			
				compatibility_alias          ,			
				defs                         ,			
				encode                       ,			
				end                          ,			
				implementation               ,			
				interface                    ,			
				protocol                     ,			
				class                        ,			
				selector                     ,			
				finally                      ,			
				synchronized                 ,			
				autoreleasepool              ,			
				property                     ,			
				package                      ,			
				required                     ,			
				optional                     ,			
				synthesize                   ,			
				dynamic                      ,			
				import                       ,
				self                         ,
				nil                          ,
				Nil                          ,
				in                           ,
				readwrite                  ,
				readonly                   ,
				strong                     ,
				weak                       ,
				copy                       ,
				assign                     ,
				retain                     ,
				atomic                     ,
				nonatomic                  ,
			);
			Type = "xcode.syntax.keyword";
			AltType = "xcode.syntax.identifier";
		};
	},

	{
		Identifier = "xcode.lang.eero.type";
		Syntax = {
			StartChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_";
			Chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";
			Words = (
				auto                        ,			
				char                        ,			
				const                       ,			
				double                      ,			
				enum                        ,			
				extern                      ,			
				float                       ,			
				inline                      ,
				int                         ,			
				long                        ,			
				register                    ,			
				restrict                    ,
				short                       ,			
				signed                      ,			
				static                      ,			
				struct                      ,			
				union                       ,			
				unsigned                    ,			
				void                        ,			
				volatile                    ,			
				_Alignas                    ,			
				_Alignof                    ,			
				_Atomic                     ,			
				_Bool                       ,
				_Complex                    ,			
				_Generic                    ,			
				_Imaginary                  ,			
				id                          ,
				instancetype                ,
				Protocol                    ,
				SEL                         ,
			);
			Type = "xcode.syntax.identifier.type";
		};
	},

	{
		Identifier = "xcode.lang.eero";
		Description = "Eero Coloring";
		BasedOn = "xcode.lang.simpleColoring";
		IncludeInMenu = YES;
		Name = Eero;
		Syntax = {
			Tokenizer = "xcode.lang.eero.lexer";
			IncludeRules = (
				"xcode.lang.eero.class",
				"xcode.lang.eero.function",
				"xcode.lang.eero.block",
				"xcode.lang.eero.bracketexpr",
				"xcode.lang.eero.parenexpr",
			);
			Type = "xcode.syntax.plain";
			"DirtyPreviousRightEdge" = YES;
		};
	},
	{
		Identifier = "xcode.lang.eero.lexer";
		Syntax = {
			"SourceScannerClassName" = DVTPythonScanner;
			IncludeRules = (
				"xcode.lang.c.preprocessor",
				"xcode.lang.comment.singleline",
				"xcode.lang.string",
				"xcode.lang.character",
				"xcode.lang.eero.number",
				"xcode.lang.eero.type",
				"xcode.lang.eero.identifier",
			);
			Type = "xcode.syntax.plain";
		};
	},
	{
		Identifier = "xcode.lang.python.indent";
		Syntax = {
			Type = "xcode.syntax.plain";
		};
	},
	{
		Identifier = "xcode.lang.python.dedent";
		Syntax = {
			Type = "xcode.syntax.plain";
		};
	},
	{
		Identifier = "xcode.lang.eero.lexer.simple";
		Syntax = {
			IncludeRules = (
				"xcode.lang.comment.singleline",
				"xcode.lang.string",
				"xcode.lang.character",
				"xcode.lang.eero.number",
				"xcode.lang.eero.type",
				"xcode.lang.eero.identifier",
			);
			Type = "xcode.syntax.plain";
		};
	},
	{
		Identifier = "xcode.lang.eero.class";
		Syntax = {
			Tokenizer = "xcode.lang.eero.lexer";
			Rules = (
				"xcode.lang.eero.class.declarator",
				"xcode.lang.eero.block",
			);
			Type = "xcode.syntax.definition.class";
		};
	},
	{
		Identifier = "xcode.lang.eero.class.declarator";
		Syntax = {
			Tokenizer = "xcode.lang.eero.lexer";
			Rules = (
				class,
				"xcode.lang.eero.name",
				"xcode.lang.eero.parenexpr?",
				":",
			);
		};
	},
	{
		Identifier = "xcode.lang.eero.function";
		Syntax = {
			Tokenizer = "xcode.lang.eero.lexer";
			Rules = (
				"xcode.lang.eero.function.declarator",
				"xcode.lang.eero.block",
			);
			Type = "xcode.syntax.definition.function";
		};
	},
	{
		Identifier = "xcode.lang.eero.function.declarator";
		Syntax = {
			Tokenizer = "xcode.lang.eero.lexer";
			Rules = (
				def,
				"xcode.lang.eero.name",
				"xcode.lang.eero.parenexpr",
				":",
			);
		};
	},
	{
		Identifier = "xcode.lang.eero.block";
		Syntax = {
			Tokenizer = "xcode.lang.eero.lexer";
			Start = "xcode.lang.python.indent";
			End = "xcode.lang.python.dedent";
			Foldable = YES;
			Recursive = YES;
			IncludeRules = (
				"xcode.lang.eero.class",
				"xcode.lang.eero.function",
				"xcode.lang.eero.bracketexpr",
				"xcode.lang.eero.parenexpr",
			);
		};
	},
	{
		Identifier = "xcode.lang.eero.name";
		Syntax = {
			Tokenizer = "xcode.lang.eero.lexer";
			Rules = (
				"xcode.lang.eero.type",
				"xcode.lang.eero.identifier",
			);
			Type = "xcode.syntax.name.partial";
		};
	},
	{
		Identifier = "xcode.lang.eero.parenexpr";
		Syntax = {
			Tokenizer = "xcode.lang.eero.lexer.simple";
			Start = "(";
			End = ")";
			Recursive = YES;
			IncludeRules = (
				"xcode.lang.eero.bracketexpr",
			);
		};
	},
	{
		Identifier = "xcode.lang.eero.bracketexpr";
		Syntax = {
			Tokenizer = "xcode.lang.eero.lexer.simple";
			Start = "[";
			End = "]";
			Recursive = YES;
			IncludeRules = (
				"xcode.lang.eero.parenexpr",
			);
		};
	},

	{
		Identifier = "xcode.lang.eero.number";
		Syntax = {
			"SourceScannerClassName" = DVTNumberScanner;
			StartChars = "0123456789.";
			Chars = "0123456789_+-.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
			Match = (
				"^[0-9]+_*[0-9]",
				"^[0-9]+((\\.[0-9_]*)?([eE][+-]?[0-9_]+)?)?([lLfF])?",
				"^[0-9]*\\.[0-9_]+([eE][+-]?[0-9_]+)?([lLfF])?",
				"^0[xX]_*[0-9a-fA-F]+((\\.[0-9a-fA-F]*)?([pP][+-]?[0-9]+)?)?([lLfF])?",
				"^0[xX]_*[0-9a-fA-F]*\\.[0-9a-fA-F]+([pP][+-]?[0-9]+)?([lLfF])?",
			);
			Type = "xcode.syntax.number";
		};
	},
)


